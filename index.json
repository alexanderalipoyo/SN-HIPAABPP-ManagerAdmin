{
  "stats": {
    "suites": 15,
    "tests": 194,
    "passes": 189,
    "pending": 0,
    "failures": 5,
    "start": "2022-12-06T12:36:53.640Z",
    "end": "2023-01-05T14:43:18.110Z",
    "duration": 2257562,
    "testsRegistered": 194,
    "passPercent": 97.42268041237114,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "a1edd0de-8399-49d0-91c3-49fbcd5f35f4",
      "title": "",
      "fullFile": "cypress\\e2e\\hipaa-bpp\\manager-admin\\general.feature",
      "file": "cypress\\e2e\\hipaa-bpp\\manager-admin\\general.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "173fbb4d-1596-4b6d-a229-1066d6382694",
          "title": "General - Manager Admin",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Application Menu : Default items should visible",
              "fullTitle": "General - Manager Admin Application Menu : Default items should visible",
              "timedOut": null,
              "duration": 15099,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "4db06d33-e802-412f-9b2a-4ad3e23abf39",
              "parentUUID": "173fbb4d-1596-4b6d-a229-1066d6382694",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Application Menu : Check texts/labels if visible",
              "fullTitle": "General - Manager Admin Application Menu : Check texts/labels if visible",
              "timedOut": null,
              "duration": 65,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "3ea74ffd-8457-498a-9ade-aa034797b3b4",
              "parentUUID": "173fbb4d-1596-4b6d-a229-1066d6382694",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Application Menu : Validate favorite application",
              "fullTitle": "General - Manager Admin Application Menu : Validate favorite application",
              "timedOut": null,
              "duration": 15844,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "f6368518-bd1f-408f-b727-31c79fd18ccb",
              "parentUUID": "173fbb4d-1596-4b6d-a229-1066d6382694",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile : Default items and fields should visible",
              "fullTitle": "General - Manager Admin My Profile : Default items and fields should visible",
              "timedOut": null,
              "duration": 1875,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "a3db77c7-4b45-4ea8-9195-db3503bbb717",
              "parentUUID": "173fbb4d-1596-4b6d-a229-1066d6382694",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile : Check texts/labels if visible",
              "fullTitle": "General - Manager Admin My Profile : Check texts/labels if visible",
              "timedOut": null,
              "duration": 175,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "c715bdfd-375f-424b-ac57-7b3c0be0d55e",
              "parentUUID": "173fbb4d-1596-4b6d-a229-1066d6382694",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile : Update Basic Information",
              "fullTitle": "General - Manager Admin My Profile : Update Basic Information",
              "timedOut": null,
              "duration": 8174,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "ee6014a5-d43e-4e82-b32b-81b15a44d2e2",
              "parentUUID": "173fbb4d-1596-4b6d-a229-1066d6382694",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile : Display warning modal to disable weekly training and monthly newsletter emails",
              "fullTitle": "General - Manager Admin My Profile : Display warning modal to disable weekly training and monthly newsletter emails",
              "timedOut": null,
              "duration": 1705,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "bc257088-862c-4404-8791-38d61b248b3f",
              "parentUUID": "173fbb4d-1596-4b6d-a229-1066d6382694",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile (NEGATIVE) : Invalidate update button with empty mandatory fields",
              "fullTitle": "General - Manager Admin My Profile (NEGATIVE) : Invalidate update button with empty mandatory fields",
              "timedOut": null,
              "duration": 2088,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "d001729b-00d5-4fa5-bfbf-219a34290a8e",
              "parentUUID": "173fbb4d-1596-4b6d-a229-1066d6382694",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile (NEGATIVE) : Password and verify password fields does not match",
              "fullTitle": "General - Manager Admin My Profile (NEGATIVE) : Password and verify password fields does not match",
              "timedOut": null,
              "duration": 2335,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "7094181d-7af4-4e00-812e-159b6f886240",
              "parentUUID": "173fbb4d-1596-4b6d-a229-1066d6382694",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile (NEGATIVE) : Enter a screen name that has special characters",
              "fullTitle": "General - Manager Admin My Profile (NEGATIVE) : Enter a screen name that has special characters",
              "timedOut": null,
              "duration": 2337,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "5e10e545-1c03-435b-a9d0-a26c3e15b5bf",
              "parentUUID": "173fbb4d-1596-4b6d-a229-1066d6382694",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile (EDGE CASE) : Add alphabet and special character on phone number",
              "fullTitle": "General - Manager Admin My Profile (EDGE CASE) : Add alphabet and special character on phone number",
              "timedOut": null,
              "duration": 515,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "99b2d40c-141f-4456-bde7-92934f925505",
              "parentUUID": "173fbb4d-1596-4b6d-a229-1066d6382694",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile (EDGE CASE) : Add alphabet and special character on mobile number",
              "fullTitle": "General - Manager Admin My Profile (EDGE CASE) : Add alphabet and special character on mobile number",
              "timedOut": null,
              "duration": 494,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "1bf5bab1-7fb9-47a4-ad72-ad9bb19fc431",
              "parentUUID": "173fbb4d-1596-4b6d-a229-1066d6382694",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile (OOTB) : Able to change country code on phone number",
              "fullTitle": "General - Manager Admin My Profile (OOTB) : Able to change country code on phone number",
              "timedOut": null,
              "duration": 3055,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "faa1e526-ceae-4f04-b642-4ed4cab40771",
              "parentUUID": "173fbb4d-1596-4b6d-a229-1066d6382694",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile (OOTB) : Enter a screen name with spaces only",
              "fullTitle": "General - Manager Admin My Profile (OOTB) : Enter a screen name with spaces only",
              "timedOut": null,
              "duration": 2038,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "f32c591b-236f-402e-a593-109ffaad94fa",
              "parentUUID": "173fbb4d-1596-4b6d-a229-1066d6382694",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile : Disable update button when mandatory fields are empty",
              "fullTitle": "General - Manager Admin My Profile : Disable update button when mandatory fields are empty",
              "timedOut": null,
              "duration": 542,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "47e4d3e3-b580-4065-b10c-161fd46393b0",
              "parentUUID": "173fbb4d-1596-4b6d-a229-1066d6382694",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile : Validate Password Strength - risk",
              "fullTitle": "General - Manager Admin My Profile : Validate Password Strength - risk",
              "timedOut": null,
              "duration": 493,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "79198096-c49e-4401-8273-dd575a9fcd0e",
              "parentUUID": "173fbb4d-1596-4b6d-a229-1066d6382694",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile : Validate Password Strength - weak",
              "fullTitle": "General - Manager Admin My Profile : Validate Password Strength - weak",
              "timedOut": null,
              "duration": 488,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "661d2f5f-68d9-4757-9ac2-b16bc5a41cfc",
              "parentUUID": "173fbb4d-1596-4b6d-a229-1066d6382694",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile : Validate Password Strength - fair",
              "fullTitle": "General - Manager Admin My Profile : Validate Password Strength - fair",
              "timedOut": null,
              "duration": 665,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "1f561124-20cc-451c-81c0-edb3590f71a7",
              "parentUUID": "173fbb4d-1596-4b6d-a229-1066d6382694",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile : Validate Password Strength - good",
              "fullTitle": "General - Manager Admin My Profile : Validate Password Strength - good",
              "timedOut": null,
              "duration": 657,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "1fe5a413-e589-424e-8186-e7dd6bfb9a6c",
              "parentUUID": "173fbb4d-1596-4b6d-a229-1066d6382694",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile : Validate Password Strength - strong",
              "fullTitle": "General - Manager Admin My Profile : Validate Password Strength - strong",
              "timedOut": null,
              "duration": 917,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "3ad4a842-40ff-46a8-807a-a9c18395944c",
              "parentUUID": "173fbb4d-1596-4b6d-a229-1066d6382694",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4db06d33-e802-412f-9b2a-4ad3e23abf39",
            "3ea74ffd-8457-498a-9ade-aa034797b3b4",
            "f6368518-bd1f-408f-b727-31c79fd18ccb",
            "a3db77c7-4b45-4ea8-9195-db3503bbb717",
            "c715bdfd-375f-424b-ac57-7b3c0be0d55e",
            "ee6014a5-d43e-4e82-b32b-81b15a44d2e2",
            "bc257088-862c-4404-8791-38d61b248b3f",
            "d001729b-00d5-4fa5-bfbf-219a34290a8e",
            "7094181d-7af4-4e00-812e-159b6f886240",
            "5e10e545-1c03-435b-a9d0-a26c3e15b5bf",
            "99b2d40c-141f-4456-bde7-92934f925505",
            "1bf5bab1-7fb9-47a4-ad72-ad9bb19fc431",
            "faa1e526-ceae-4f04-b642-4ed4cab40771",
            "f32c591b-236f-402e-a593-109ffaad94fa",
            "47e4d3e3-b580-4065-b10c-161fd46393b0",
            "79198096-c49e-4401-8273-dd575a9fcd0e",
            "661d2f5f-68d9-4757-9ac2-b16bc5a41cfc",
            "1f561124-20cc-451c-81c0-edb3590f71a7",
            "1fe5a413-e589-424e-8186-e7dd6bfb9a6c",
            "3ad4a842-40ff-46a8-807a-a9c18395944c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 59561,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "5edd0b84-cac9-421c-9b4d-4ed2bc3348d9",
      "title": "",
      "fullFile": "cypress\\e2e\\hipaa-bpp\\manager-admin\\newsfeed.feature",
      "file": "cypress\\e2e\\hipaa-bpp\\manager-admin\\newsfeed.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1c43b699-76f2-4c1f-b858-419127b3fbb7",
          "title": "Newsfeed - Manager Admin",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Newsfeed : Default items should visible",
              "fullTitle": "Newsfeed - Manager Admin Newsfeed : Default items should visible",
              "timedOut": null,
              "duration": 18294,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "addfff37-d865-43ac-98b9-65be46d9a01d",
              "parentUUID": "1c43b699-76f2-4c1f-b858-419127b3fbb7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Newsfeed : Check texts/labels if visible",
              "fullTitle": "Newsfeed - Manager Admin Newsfeed : Check texts/labels if visible",
              "timedOut": null,
              "duration": 126,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "a81ead1c-5769-4fbf-a5fa-e7d4a208aff1",
              "parentUUID": "1c43b699-76f2-4c1f-b858-419127b3fbb7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Newsfeed : Validate Notifications",
              "fullTitle": "Newsfeed - Manager Admin Newsfeed : Validate Notifications",
              "timedOut": null,
              "duration": 2658,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "0f52bbdd-e677-4a23-9df3-7f1662b764c9",
              "parentUUID": "1c43b699-76f2-4c1f-b858-419127b3fbb7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Newsfeed : Validate Advanced Filters",
              "fullTitle": "Newsfeed - Manager Admin Newsfeed : Validate Advanced Filters",
              "timedOut": null,
              "duration": 9683,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "03be4898-a5f3-4bc0-a59d-98f96a48b9e3",
              "parentUUID": "1c43b699-76f2-4c1f-b858-419127b3fbb7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Newsfeed : Validate Sortings",
              "fullTitle": "Newsfeed - Manager Admin Newsfeed : Validate Sortings",
              "timedOut": null,
              "duration": 7408,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "d8b7b31c-5a60-4aa2-a744-23889277f82e",
              "parentUUID": "1c43b699-76f2-4c1f-b858-419127b3fbb7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Newsfeed : Validate Search by Hasthag",
              "fullTitle": "Newsfeed - Manager Admin Newsfeed : Validate Search by Hasthag",
              "timedOut": null,
              "duration": 947,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "42c2d16d-0114-43ca-93d0-550e4aa1e436",
              "parentUUID": "1c43b699-76f2-4c1f-b858-419127b3fbb7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Newsfeed : Validate Search by Users",
              "fullTitle": "Newsfeed - Manager Admin Newsfeed : Validate Search by Users",
              "timedOut": null,
              "duration": 967,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "c7688807-428d-4b7a-9c24-677d07dbd56a",
              "parentUUID": "1c43b699-76f2-4c1f-b858-419127b3fbb7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Newsfeed (NEGATIVE) : Validate MA/M/E (non-internal bpp) does not have authorized to publish a post",
              "fullTitle": "Newsfeed - Manager Admin Newsfeed (NEGATIVE) : Validate MA/M/E (non-internal bpp) does not have authorized to publish a post",
              "timedOut": null,
              "duration": 105,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "43c054e7-bde5-4c80-afa8-ad4cb53154d5",
              "parentUUID": "1c43b699-76f2-4c1f-b858-419127b3fbb7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Newsfeed (EDGE) : Validate Press \"ENTER\" key on keyboard on Newsfeed Screen",
              "fullTitle": "Newsfeed - Manager Admin Newsfeed (EDGE) : Validate Press \"ENTER\" key on keyboard on Newsfeed Screen",
              "timedOut": null,
              "duration": 177,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "62ad82b4-b301-433b-966d-fa0e5188b43c",
              "parentUUID": "1c43b699-76f2-4c1f-b858-419127b3fbb7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Newsfeed (NEGATIVE) : Validate search on non existing user",
              "fullTitle": "Newsfeed - Manager Admin Newsfeed (NEGATIVE) : Validate search on non existing user",
              "timedOut": null,
              "duration": 2314,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "7e59b388-f1b6-430c-ae05-0b504830394f",
              "parentUUID": "1c43b699-76f2-4c1f-b858-419127b3fbb7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Newsfeed (NEGATIVE) : Validate search on non existing hashtags",
              "fullTitle": "Newsfeed - Manager Admin Newsfeed (NEGATIVE) : Validate search on non existing hashtags",
              "timedOut": null,
              "duration": 2590,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "c62a8bae-f99b-4dd8-beea-2e1dfa4f8e17",
              "parentUUID": "1c43b699-76f2-4c1f-b858-419127b3fbb7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "addfff37-d865-43ac-98b9-65be46d9a01d",
            "a81ead1c-5769-4fbf-a5fa-e7d4a208aff1",
            "0f52bbdd-e677-4a23-9df3-7f1662b764c9",
            "03be4898-a5f3-4bc0-a59d-98f96a48b9e3",
            "d8b7b31c-5a60-4aa2-a744-23889277f82e",
            "42c2d16d-0114-43ca-93d0-550e4aa1e436",
            "c7688807-428d-4b7a-9c24-677d07dbd56a",
            "43c054e7-bde5-4c80-afa8-ad4cb53154d5",
            "62ad82b4-b301-433b-966d-fa0e5188b43c",
            "7e59b388-f1b6-430c-ae05-0b504830394f",
            "c62a8bae-f99b-4dd8-beea-2e1dfa4f8e17"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 45269,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "4a518c98-ee7b-491a-8cd1-7bf322f108b0",
      "title": "",
      "fullFile": "cypress\\e2e\\hipaa-bpp\\manager-admin\\my-company\\dark_web.feature",
      "file": "cypress\\e2e\\hipaa-bpp\\manager-admin\\my-company\\dark_web.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "66ed7bce-ab21-4226-8f17-99c0475eb3f9",
          "title": "Dark Web Monitoring",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "My Company DWM : Default items should visible",
              "fullTitle": "Dark Web Monitoring My Company DWM : Default items should visible",
              "timedOut": null,
              "duration": 22349,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "6341f18f-f50a-48a3-af4a-4aa62eac7dbf",
              "parentUUID": "66ed7bce-ab21-4226-8f17-99c0475eb3f9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company DWM : Check texts/labels if visible",
              "fullTitle": "Dark Web Monitoring My Company DWM : Check texts/labels if visible",
              "timedOut": null,
              "duration": 1873,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "03196318-ee02-4b3d-b879-a6911bcd17e7",
              "parentUUID": "66ed7bce-ab21-4226-8f17-99c0475eb3f9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company DWM : Generate Reports",
              "fullTitle": "Dark Web Monitoring My Company DWM : Generate Reports",
              "timedOut": null,
              "duration": 1485,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "3f903ced-6242-486c-bbca-952df05b8591",
              "parentUUID": "66ed7bce-ab21-4226-8f17-99c0475eb3f9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company DWM (OOTB) : Validate API results when generating reports",
              "fullTitle": "Dark Web Monitoring My Company DWM (OOTB) : Validate API results when generating reports",
              "timedOut": null,
              "duration": 3113,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "1dc5b65e-0213-4971-8e93-803effc59646",
              "parentUUID": "66ed7bce-ab21-4226-8f17-99c0475eb3f9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company DWM (OOTB) : Validate POST method each click event on table results",
              "fullTitle": "Dark Web Monitoring My Company DWM (OOTB) : Validate POST method each click event on table results",
              "timedOut": null,
              "duration": 2717,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "de3543cc-9b14-44a8-885e-50b70d363d58",
              "parentUUID": "66ed7bce-ab21-4226-8f17-99c0475eb3f9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company DWM (NEGATIVE) : Validate unregistered domain on table results",
              "fullTitle": "Dark Web Monitoring My Company DWM (NEGATIVE) : Validate unregistered domain on table results",
              "timedOut": null,
              "duration": 3376,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "de2c9e0f-d4a7-47dc-b359-16d5e8e086a8",
              "parentUUID": "66ed7bce-ab21-4226-8f17-99c0475eb3f9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company DWM (NEGATIVE) : Validate unlisted site breached on table results",
              "fullTitle": "Dark Web Monitoring My Company DWM (NEGATIVE) : Validate unlisted site breached on table results",
              "timedOut": null,
              "duration": 2446,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "bc75de02-5cda-4c45-b600-2fd944949fcd",
              "parentUUID": "66ed7bce-ab21-4226-8f17-99c0475eb3f9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company DWM (NEGATIVE) : Invalidate searching breach date",
              "fullTitle": "Dark Web Monitoring My Company DWM (NEGATIVE) : Invalidate searching breach date",
              "timedOut": null,
              "duration": 5955,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "095a071d-c5b1-4b11-a156-21c9b51287bc",
              "parentUUID": "66ed7bce-ab21-4226-8f17-99c0475eb3f9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company DWM (EDGE) : Validate password redaction options",
              "fullTitle": "Dark Web Monitoring My Company DWM (EDGE) : Validate password redaction options",
              "timedOut": null,
              "duration": 2835,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "978146a4-3e5f-443b-967d-808c32074b94",
              "parentUUID": "66ed7bce-ab21-4226-8f17-99c0475eb3f9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company DWM (EDGE) : Validate non redaction password",
              "fullTitle": "Dark Web Monitoring My Company DWM (EDGE) : Validate non redaction password",
              "timedOut": null,
              "duration": 1148,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "bd816072-a079-490d-b0e8-079ec980f5b3",
              "parentUUID": "66ed7bce-ab21-4226-8f17-99c0475eb3f9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company DWM : Validate column sorting",
              "fullTitle": "Dark Web Monitoring My Company DWM : Validate column sorting",
              "timedOut": null,
              "duration": 10277,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "e3f07c2e-df52-482c-bd15-3f91f521dd77",
              "parentUUID": "66ed7bce-ab21-4226-8f17-99c0475eb3f9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6341f18f-f50a-48a3-af4a-4aa62eac7dbf",
            "03196318-ee02-4b3d-b879-a6911bcd17e7",
            "3f903ced-6242-486c-bbca-952df05b8591",
            "1dc5b65e-0213-4971-8e93-803effc59646",
            "de3543cc-9b14-44a8-885e-50b70d363d58",
            "de2c9e0f-d4a7-47dc-b359-16d5e8e086a8",
            "bc75de02-5cda-4c45-b600-2fd944949fcd",
            "095a071d-c5b1-4b11-a156-21c9b51287bc",
            "978146a4-3e5f-443b-967d-808c32074b94",
            "bd816072-a079-490d-b0e8-079ec980f5b3",
            "e3f07c2e-df52-482c-bd15-3f91f521dd77"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 57574,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "b0e073dd-bb8c-47e1-94e0-b663123cd533",
      "title": "",
      "fullFile": "cypress\\e2e\\hipaa-bpp\\manager-admin\\my-company\\documents.feature",
      "file": "cypress\\e2e\\hipaa-bpp\\manager-admin\\my-company\\documents.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "36325f30-df44-4e3d-8dda-3b45161611c3",
          "title": "Documents",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "My Company Documents: Default items should visible",
              "fullTitle": "Documents My Company Documents: Default items should visible",
              "timedOut": null,
              "duration": 21154,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "f5ecc7df-78e7-4e14-a2ba-69f008d5ca62",
              "parentUUID": "36325f30-df44-4e3d-8dda-3b45161611c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents : Check texts/labels if visible",
              "fullTitle": "Documents My Company Documents : Check texts/labels if visible",
              "timedOut": null,
              "duration": 2103,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "d33dc09d-bf0f-4220-b1d2-699b90e1ce97",
              "parentUUID": "36325f30-df44-4e3d-8dda-3b45161611c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents : Adding Business Associate Agreement",
              "fullTitle": "Documents My Company Documents : Adding Business Associate Agreement",
              "timedOut": null,
              "duration": 24051,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "10312741-bcf6-4937-88f7-f9b8f7d7e407",
              "parentUUID": "36325f30-df44-4e3d-8dda-3b45161611c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents : Validate created Business Associate Agreement",
              "fullTitle": "Documents My Company Documents : Validate created Business Associate Agreement",
              "timedOut": null,
              "duration": 95322,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {
                "message": "AssertionError: Timed out retrying after 95000ms: expected '<td.MuiTableCell-root-495.MuiTableCell-body-497.ComponentTypes__TableCellContent-sc-nb4o94-12.frUspS.MuiTableCell-alignLeft-502>' to contain text '2023-01-05', but the text was '01/05/2023'",
                "estack": "AssertionError: Timed out retrying after 95000ms: expected '<td.MuiTableCell-root-495.MuiTableCell-body-497.ComponentTypes__TableCellContent-sc-nb4o94-12.frUspS.MuiTableCell-alignLeft-502>' to contain text '2023-01-05', but the text was '01/05/2023'\n    at companyDocuments.documentTypes (cypress/page-objects/internal-bpp/partner-admin/my-company/documents.ts:364:41)\n    at Context.eval (cypress/e2e/hipaa-bpp/manager-admin/my-company/documents/company_documents.ts:103:19)\n    at Context.resolveAndRunStepDefinition (node_modules/cypress-cucumber-preprocessor/lib/resolveStepDefinition.js:193:0)\n    at Context.eval (node_modules/cypress-cucumber-preprocessor/lib/createTestFromScenario.js:27:0)",
                "diff": "- '01/05/2023'\n+ '2023-01-05'\n"
              },
              "uuid": "fa89f9c6-7900-48bd-87cd-1f420488baa6",
              "parentUUID": "36325f30-df44-4e3d-8dda-3b45161611c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents : Edit existing Business Associate Agreement",
              "fullTitle": "Documents My Company Documents : Edit existing Business Associate Agreement",
              "timedOut": null,
              "duration": 23378,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "82a8d2b9-db0a-4519-a994-a2a9e2ac06f8",
              "parentUUID": "36325f30-df44-4e3d-8dda-3b45161611c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents : Delete existing Business Associate Agreement",
              "fullTitle": "Documents My Company Documents : Delete existing Business Associate Agreement",
              "timedOut": null,
              "duration": 3908,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "2453f5cb-d263-47e3-8e08-36be4a2cc603",
              "parentUUID": "36325f30-df44-4e3d-8dda-3b45161611c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents : Adding Disaster Recovery Plans",
              "fullTitle": "Documents My Company Documents : Adding Disaster Recovery Plans",
              "timedOut": null,
              "duration": 12122,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "3a95853f-9933-4f10-98af-fece95995ed5",
              "parentUUID": "36325f30-df44-4e3d-8dda-3b45161611c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents : Validate created Disaster Recovery Plans",
              "fullTitle": "Documents My Company Documents : Validate created Disaster Recovery Plans",
              "timedOut": null,
              "duration": 95240,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {
                "message": "AssertionError: Timed out retrying after 95000ms: Expected to find element: `//tbody/tr[1]/td[6]/a[1]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 95000ms: Expected to find element: `//tbody/tr[1]/td[6]/a[1]`, but never found it.\n    at companyDocuments.documentTypes (cypress/page-objects/internal-bpp/partner-admin/my-company/documents.ts:197:49)\n    at Context.eval (cypress/e2e/hipaa-bpp/manager-admin/my-company/documents/company_documents.ts:174:19)\n    at Context.resolveAndRunStepDefinition (node_modules/cypress-cucumber-preprocessor/lib/resolveStepDefinition.js:193:0)\n    at Context.eval (node_modules/cypress-cucumber-preprocessor/lib/createTestFromScenario.js:27:0)",
                "diff": null
              },
              "uuid": "7b250d61-1c38-4e5a-b430-aa567f831c32",
              "parentUUID": "36325f30-df44-4e3d-8dda-3b45161611c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents : Edit existing Disaster Recovery Plans",
              "fullTitle": "Documents My Company Documents : Edit existing Disaster Recovery Plans",
              "timedOut": null,
              "duration": 11674,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "4bb74e67-472e-4bff-94a1-89da54dc38c9",
              "parentUUID": "36325f30-df44-4e3d-8dda-3b45161611c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents : Delete existing Disaster Recovery Plans",
              "fullTitle": "Documents My Company Documents : Delete existing Disaster Recovery Plans",
              "timedOut": null,
              "duration": 3766,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "1c87f341-1429-4625-b0f8-88c3906a42aa",
              "parentUUID": "36325f30-df44-4e3d-8dda-3b45161611c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents : Adding Other Documents",
              "fullTitle": "Documents My Company Documents : Adding Other Documents",
              "timedOut": null,
              "duration": 10898,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "f75df147-2fd7-42cb-a93d-f30aa715dd40",
              "parentUUID": "36325f30-df44-4e3d-8dda-3b45161611c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents : Validate created Other Documents",
              "fullTitle": "Documents My Company Documents : Validate created Other Documents",
              "timedOut": null,
              "duration": 95259,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {
                "message": "AssertionError: Timed out retrying after 95000ms: Expected to find element: `//tbody/tr[1]/td[5]/a[1]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 95000ms: Expected to find element: `//tbody/tr[1]/td[5]/a[1]`, but never found it.\n    at companyDocuments.documentTypes (cypress/page-objects/internal-bpp/partner-admin/my-company/documents.ts:200:55)\n    at Context.eval (cypress/e2e/hipaa-bpp/manager-admin/my-company/documents/company_documents.ts:241:19)\n    at Context.resolveAndRunStepDefinition (node_modules/cypress-cucumber-preprocessor/lib/resolveStepDefinition.js:193:0)\n    at Context.eval (node_modules/cypress-cucumber-preprocessor/lib/createTestFromScenario.js:27:0)",
                "diff": null
              },
              "uuid": "75bcb395-d86b-495c-80ef-f7acd5f7c190",
              "parentUUID": "36325f30-df44-4e3d-8dda-3b45161611c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents : Edit existing Other Documents",
              "fullTitle": "Documents My Company Documents : Edit existing Other Documents",
              "timedOut": null,
              "duration": 12511,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "51bbf809-ed48-4851-989f-f7e7a56d28d3",
              "parentUUID": "36325f30-df44-4e3d-8dda-3b45161611c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents : Delete Other Documents",
              "fullTitle": "Documents My Company Documents : Delete Other Documents",
              "timedOut": null,
              "duration": 4347,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "37edeea4-4e05-449f-bc34-9ea5d7599980",
              "parentUUID": "36325f30-df44-4e3d-8dda-3b45161611c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents (EDGE) : Validate existing template and categories",
              "fullTitle": "Documents My Company Documents (EDGE) : Validate existing template and categories",
              "timedOut": null,
              "duration": 7384,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "97ad67f7-a968-4545-90e9-bec5f3560156",
              "parentUUID": "36325f30-df44-4e3d-8dda-3b45161611c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents (NEGATIVE) : Validate toaster for uploading invalid file types",
              "fullTitle": "Documents My Company Documents (NEGATIVE) : Validate toaster for uploading invalid file types",
              "timedOut": null,
              "duration": 6140,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "182735b9-7de0-4720-8eed-42c4d200818c",
              "parentUUID": "36325f30-df44-4e3d-8dda-3b45161611c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents (NEGATIVE) : Validate all required fields on adding Service Provider Contract Information",
              "fullTitle": "Documents My Company Documents (NEGATIVE) : Validate all required fields on adding Service Provider Contract Information",
              "timedOut": null,
              "duration": 3115,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "69e62a90-11bd-4595-9c27-a8c8c2cd4026",
              "parentUUID": "36325f30-df44-4e3d-8dda-3b45161611c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents (NEGATIVE) : Validate email address format",
              "fullTitle": "Documents My Company Documents (NEGATIVE) : Validate email address format",
              "timedOut": null,
              "duration": 3478,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "6d4e4af8-255a-42a9-bbb4-b8dcfc56be01",
              "parentUUID": "36325f30-df44-4e3d-8dda-3b45161611c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents (OOTB) : Discard Business Associate Agreement when closing modal without saving",
              "fullTitle": "Documents My Company Documents (OOTB) : Discard Business Associate Agreement when closing modal without saving",
              "timedOut": null,
              "duration": 2484,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "990547d9-9e38-41a6-9f54-80f086e6f340",
              "parentUUID": "36325f30-df44-4e3d-8dda-3b45161611c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents (EDGE) : Validate Adding Disaster Recovery Plan without attachments",
              "fullTitle": "Documents My Company Documents (EDGE) : Validate Adding Disaster Recovery Plan without attachments",
              "timedOut": null,
              "duration": 8672,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "5ab2227b-3c0e-4cab-b408-2b7f88573424",
              "parentUUID": "36325f30-df44-4e3d-8dda-3b45161611c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents (EDGE) : Attach files on existing Disaster Recovery Plan",
              "fullTitle": "Documents My Company Documents (EDGE) : Attach files on existing Disaster Recovery Plan",
              "timedOut": null,
              "duration": 15123,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "fd938a8b-afdf-49f4-afc6-bae7c86de18f",
              "parentUUID": "36325f30-df44-4e3d-8dda-3b45161611c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents (OOTB) : Discard Disaster Recovery Plan when closing modal without saving",
              "fullTitle": "Documents My Company Documents (OOTB) : Discard Disaster Recovery Plan when closing modal without saving",
              "timedOut": null,
              "duration": 1746,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "13ec5737-d5b4-43b5-ab80-893803fc0672",
              "parentUUID": "36325f30-df44-4e3d-8dda-3b45161611c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents (OOTB) : Validate Next Button if information details are empty in Disaster Recovery Plan",
              "fullTitle": "Documents My Company Documents (OOTB) : Validate Next Button if information details are empty in Disaster Recovery Plan",
              "timedOut": null,
              "duration": 4054,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "f580641c-b399-4b03-b3b4-76c9d1e5b55d",
              "parentUUID": "36325f30-df44-4e3d-8dda-3b45161611c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents (EDGE) : Validate Adding Other Documents without attachments",
              "fullTitle": "Documents My Company Documents (EDGE) : Validate Adding Other Documents without attachments",
              "timedOut": null,
              "duration": 8373,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "e7489eaf-c6e9-4dc4-9e0c-1c7ae13396f6",
              "parentUUID": "36325f30-df44-4e3d-8dda-3b45161611c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents (EDGE) : Attach files on Other Documents",
              "fullTitle": "Documents My Company Documents (EDGE) : Attach files on Other Documents",
              "timedOut": null,
              "duration": 14425,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "89911ceb-8f4d-47e5-a021-4d47db76830f",
              "parentUUID": "36325f30-df44-4e3d-8dda-3b45161611c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents (OOTB) : Discard Other Documents when closing modal without saving",
              "fullTitle": "Documents My Company Documents (OOTB) : Discard Other Documents when closing modal without saving",
              "timedOut": null,
              "duration": 4246,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "4f3fd545-615f-46da-9f28-b91c990d0147",
              "parentUUID": "36325f30-df44-4e3d-8dda-3b45161611c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents (OOTB) : Validate Next Button if information details are empty in Other Documents",
              "fullTitle": "Documents My Company Documents (OOTB) : Validate Next Button if information details are empty in Other Documents",
              "timedOut": null,
              "duration": 5007,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "4cd10f30-4d01-48c0-95b4-7bcdb77776d0",
              "parentUUID": "36325f30-df44-4e3d-8dda-3b45161611c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents (NEGATIVE) : Validate toaster for uploading invalid file types in Other Documents",
              "fullTitle": "Documents My Company Documents (NEGATIVE) : Validate toaster for uploading invalid file types in Other Documents",
              "timedOut": null,
              "duration": 11789,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "53e0a41f-2362-402e-88ad-9fc52344d674",
              "parentUUID": "36325f30-df44-4e3d-8dda-3b45161611c3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f5ecc7df-78e7-4e14-a2ba-69f008d5ca62",
            "d33dc09d-bf0f-4220-b1d2-699b90e1ce97",
            "10312741-bcf6-4937-88f7-f9b8f7d7e407",
            "82a8d2b9-db0a-4519-a994-a2a9e2ac06f8",
            "2453f5cb-d263-47e3-8e08-36be4a2cc603",
            "3a95853f-9933-4f10-98af-fece95995ed5",
            "4bb74e67-472e-4bff-94a1-89da54dc38c9",
            "1c87f341-1429-4625-b0f8-88c3906a42aa",
            "f75df147-2fd7-42cb-a93d-f30aa715dd40",
            "51bbf809-ed48-4851-989f-f7e7a56d28d3",
            "37edeea4-4e05-449f-bc34-9ea5d7599980",
            "97ad67f7-a968-4545-90e9-bec5f3560156",
            "182735b9-7de0-4720-8eed-42c4d200818c",
            "69e62a90-11bd-4595-9c27-a8c8c2cd4026",
            "6d4e4af8-255a-42a9-bbb4-b8dcfc56be01",
            "990547d9-9e38-41a6-9f54-80f086e6f340",
            "5ab2227b-3c0e-4cab-b408-2b7f88573424",
            "fd938a8b-afdf-49f4-afc6-bae7c86de18f",
            "13ec5737-d5b4-43b5-ab80-893803fc0672",
            "f580641c-b399-4b03-b3b4-76c9d1e5b55d",
            "e7489eaf-c6e9-4dc4-9e0c-1c7ae13396f6",
            "89911ceb-8f4d-47e5-a021-4d47db76830f",
            "4f3fd545-615f-46da-9f28-b91c990d0147",
            "4cd10f30-4d01-48c0-95b4-7bcdb77776d0",
            "53e0a41f-2362-402e-88ad-9fc52344d674"
          ],
          "failures": [
            "fa89f9c6-7900-48bd-87cd-1f420488baa6",
            "7b250d61-1c38-4e5a-b430-aa567f831c32",
            "75bcb395-d86b-495c-80ef-f7acd5f7c190"
          ],
          "pending": [],
          "skipped": [],
          "duration": 511769,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "6ffe11ce-0e50-4d88-9356-205e20ef6c47",
      "title": "",
      "fullFile": "cypress\\e2e\\hipaa-bpp\\manager-admin\\my-company\\policies.feature",
      "file": "cypress\\e2e\\hipaa-bpp\\manager-admin\\my-company\\policies.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6a32d2b9-5df1-4f04-bd4e-ee07e294fc23",
          "title": "Policy & Procedure",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "My Company Policies: Default items should visible",
              "fullTitle": "Policy & Procedure My Company Policies: Default items should visible",
              "timedOut": null,
              "duration": 28594,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "5f7d13a7-f52d-4830-a2d4-2c9e24512545",
              "parentUUID": "6a32d2b9-5df1-4f04-bd4e-ee07e294fc23",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Policies : Check texts/labels if visible",
              "fullTitle": "Policy & Procedure My Company Policies : Check texts/labels if visible",
              "timedOut": null,
              "duration": 2131,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "495cb232-27be-445c-b8b1-cf256c18d15b",
              "parentUUID": "6a32d2b9-5df1-4f04-bd4e-ee07e294fc23",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Policies : Validate Existing Policy",
              "fullTitle": "Policy & Procedure My Company Policies : Validate Existing Policy",
              "timedOut": null,
              "duration": 6630,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "9f026f9f-a050-4c3c-b642-4c10817c281e",
              "parentUUID": "6a32d2b9-5df1-4f04-bd4e-ee07e294fc23",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Policies : Download file in existing policy modal",
              "fullTitle": "Policy & Procedure My Company Policies : Download file in existing policy modal",
              "timedOut": null,
              "duration": 4944,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "743ad66a-fe30-4e33-b9ef-263043c88ce1",
              "parentUUID": "6a32d2b9-5df1-4f04-bd4e-ee07e294fc23",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Policies : Validate Other Policies",
              "fullTitle": "Policy & Procedure My Company Policies : Validate Other Policies",
              "timedOut": null,
              "duration": 3469,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "3b75a437-0e3a-4be0-b48c-0878058df8f1",
              "parentUUID": "6a32d2b9-5df1-4f04-bd4e-ee07e294fc23",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Policies : Add New Policy",
              "fullTitle": "Policy & Procedure My Company Policies : Add New Policy",
              "timedOut": null,
              "duration": 11745,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "7aaaa038-b8b4-41ce-a77b-2a2131efc898",
              "parentUUID": "6a32d2b9-5df1-4f04-bd4e-ee07e294fc23",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Policies : Download file in Other Policies and Procedure",
              "fullTitle": "Policy & Procedure My Company Policies : Download file in Other Policies and Procedure",
              "timedOut": null,
              "duration": 95624,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {
                "message": "AssertionError: Timed out retrying after 95000ms: expected '<td.MuiTableCell-root-521.MuiTableCell-body-523.ComponentTypes__TableCellContent-sc-nb4o94-12.frUspS.MuiTableCell-alignLeft-528>' to contain text '2023-01-05', but the text was '2023-01-03'",
                "estack": "AssertionError: Timed out retrying after 95000ms: expected '<td.MuiTableCell-root-521.MuiTableCell-body-523.ComponentTypes__TableCellContent-sc-nb4o94-12.frUspS.MuiTableCell-alignLeft-528>' to contain text '2023-01-05', but the text was '2023-01-03'\n    at companyPolicies.policyTypes (cypress/page-objects/internal-bpp/partner-admin/my-company/policies.ts:179:46)\n    at Context.eval (cypress/e2e/hipaa-bpp/manager-admin/my-company/policies/company_policies.ts:153:18)\n    at Context.resolveAndRunStepDefinition (node_modules/cypress-cucumber-preprocessor/lib/resolveStepDefinition.js:193:0)\n    at Context.eval (node_modules/cypress-cucumber-preprocessor/lib/createTestFromScenario.js:27:0)",
                "diff": "- '2023-01-03'\n+ '2023-01-05'\n"
              },
              "uuid": "7513237f-6909-409f-a06c-91712bd80da2",
              "parentUUID": "6a32d2b9-5df1-4f04-bd4e-ee07e294fc23",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Policies : Validate Added Other Policies and Procedure",
              "fullTitle": "Policy & Procedure My Company Policies : Validate Added Other Policies and Procedure",
              "timedOut": null,
              "duration": 10912,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "9166bede-eae8-4fd3-b4dc-e807342e5d1d",
              "parentUUID": "6a32d2b9-5df1-4f04-bd4e-ee07e294fc23",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Policies : Edit Other Policies and Procedure",
              "fullTitle": "Policy & Procedure My Company Policies : Edit Other Policies and Procedure",
              "timedOut": null,
              "duration": 10208,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "3318e5f3-a12c-4300-acd6-184863ab1fb8",
              "parentUUID": "6a32d2b9-5df1-4f04-bd4e-ee07e294fc23",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Policies : Delete Other Policies and Procedure",
              "fullTitle": "Policy & Procedure My Company Policies : Delete Other Policies and Procedure",
              "timedOut": null,
              "duration": 3901,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "a2e59bb4-5d66-4956-a59f-f6a209b4d792",
              "parentUUID": "6a32d2b9-5df1-4f04-bd4e-ee07e294fc23",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Policies (OOTB) : Validate API status when downloading all existing policies",
              "fullTitle": "Policy & Procedure My Company Policies (OOTB) : Validate API status when downloading all existing policies",
              "timedOut": null,
              "duration": 10688,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "867eafa1-7604-4eee-a564-6c006492cb62",
              "parentUUID": "6a32d2b9-5df1-4f04-bd4e-ee07e294fc23",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Policies (OOTB) : Validate API status when downloading single file",
              "fullTitle": "Policy & Procedure My Company Policies (OOTB) : Validate API status when downloading single file",
              "timedOut": null,
              "duration": 4260,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "44b3d415-cc5b-4217-a75f-cd1fd7f4cb3b",
              "parentUUID": "6a32d2b9-5df1-4f04-bd4e-ee07e294fc23",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents (NEGATIVE) : Validate Next Button if information details are empty when adding Security Policies & Procedures",
              "fullTitle": "Policy & Procedure My Company Documents (NEGATIVE) : Validate Next Button if information details are empty when adding Security Policies & Procedures",
              "timedOut": null,
              "duration": 7163,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "1c7a6178-48dc-439b-bc2d-2f3e0e59d8cc",
              "parentUUID": "6a32d2b9-5df1-4f04-bd4e-ee07e294fc23",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents (NEGATIVE) : Discard saving new Security Policies & Procedures when closing modal",
              "fullTitle": "Policy & Procedure My Company Documents (NEGATIVE) : Discard saving new Security Policies & Procedures when closing modal",
              "timedOut": null,
              "duration": 7281,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "28ea5428-0988-4a56-a140-bbb4b70f5c27",
              "parentUUID": "6a32d2b9-5df1-4f04-bd4e-ee07e294fc23",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Documents (NEGATIVE) : Validate toaster for uploading invalid file types",
              "fullTitle": "Policy & Procedure My Company Documents (NEGATIVE) : Validate toaster for uploading invalid file types",
              "timedOut": null,
              "duration": 9303,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "48cac7ad-6039-45e6-969d-04b2e09e23df",
              "parentUUID": "6a32d2b9-5df1-4f04-bd4e-ee07e294fc23",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5f7d13a7-f52d-4830-a2d4-2c9e24512545",
            "495cb232-27be-445c-b8b1-cf256c18d15b",
            "9f026f9f-a050-4c3c-b642-4c10817c281e",
            "743ad66a-fe30-4e33-b9ef-263043c88ce1",
            "3b75a437-0e3a-4be0-b48c-0878058df8f1",
            "7aaaa038-b8b4-41ce-a77b-2a2131efc898",
            "9166bede-eae8-4fd3-b4dc-e807342e5d1d",
            "3318e5f3-a12c-4300-acd6-184863ab1fb8",
            "a2e59bb4-5d66-4956-a59f-f6a209b4d792",
            "867eafa1-7604-4eee-a564-6c006492cb62",
            "44b3d415-cc5b-4217-a75f-cd1fd7f4cb3b",
            "1c7a6178-48dc-439b-bc2d-2f3e0e59d8cc",
            "28ea5428-0988-4a56-a140-bbb4b70f5c27",
            "48cac7ad-6039-45e6-969d-04b2e09e23df"
          ],
          "failures": [
            "7513237f-6909-409f-a06c-91712bd80da2"
          ],
          "pending": [],
          "skipped": [],
          "duration": 216853,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "50aa04f8-737a-470c-926a-8e3624bf8c32",
      "title": "",
      "fullFile": "cypress\\e2e\\hipaa-bpp\\manager-admin\\my-company\\sra.feature",
      "file": "cypress\\e2e\\hipaa-bpp\\manager-admin\\my-company\\sra.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d4078124-007c-4f5c-adb1-6e19fa2162eb",
          "title": "SRA",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "My Company SRA : Default items should visible",
              "fullTitle": "SRA My Company SRA : Default items should visible",
              "timedOut": null,
              "duration": 16579,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "e18da023-c2ed-4022-924a-ad3aaa3d42da",
              "parentUUID": "d4078124-007c-4f5c-adb1-6e19fa2162eb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA : Check texts/labels if visible",
              "fullTitle": "SRA My Company SRA : Check texts/labels if visible",
              "timedOut": null,
              "duration": 5791,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "6e8ab6a5-6f45-4e4f-beeb-92b82060c4cd",
              "parentUUID": "d4078124-007c-4f5c-adb1-6e19fa2162eb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA : Save Organization Profile - Name and Location",
              "fullTitle": "SRA My Company SRA : Save Organization Profile - Name and Location",
              "timedOut": null,
              "duration": 15398,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "b7feba19-0ca0-434c-a8ba-284be65174d9",
              "parentUUID": "d4078124-007c-4f5c-adb1-6e19fa2162eb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA : Save Organization Profile - Network",
              "fullTitle": "SRA My Company SRA : Save Organization Profile - Network",
              "timedOut": null,
              "duration": 11150,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "4c0d1727-6bf2-48ac-8f8a-6d5cb3a767a0",
              "parentUUID": "d4078124-007c-4f5c-adb1-6e19fa2162eb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA : Save Organization Profile - EMR/EHR",
              "fullTitle": "SRA My Company SRA : Save Organization Profile - EMR/EHR",
              "timedOut": null,
              "duration": 6727,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "ff8e9531-db4d-4c23-98c6-76db76f151ad",
              "parentUUID": "d4078124-007c-4f5c-adb1-6e19fa2162eb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA : Save Organization Profile - Email",
              "fullTitle": "SRA My Company SRA : Save Organization Profile - Email",
              "timedOut": null,
              "duration": 4338,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "e87d44c6-634c-4eb8-9481-49cd8ba9b15c",
              "parentUUID": "d4078124-007c-4f5c-adb1-6e19fa2162eb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA : Save Organization Profile - Media and Devices",
              "fullTitle": "SRA My Company SRA : Save Organization Profile - Media and Devices",
              "timedOut": null,
              "duration": 2651,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "582cb51c-f4fa-4581-9a2b-88ec7681881f",
              "parentUUID": "d4078124-007c-4f5c-adb1-6e19fa2162eb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA : Save Organization Profile - System",
              "fullTitle": "SRA My Company SRA : Save Organization Profile - System",
              "timedOut": null,
              "duration": 9836,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "0d7c3ae9-3053-403c-ba92-7a5f2cbec96a",
              "parentUUID": "d4078124-007c-4f5c-adb1-6e19fa2162eb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA : Save Organization Profile - Additional Information",
              "fullTitle": "SRA My Company SRA : Save Organization Profile - Additional Information",
              "timedOut": null,
              "duration": 3149,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "90125179-7f35-4879-a093-d3185296454c",
              "parentUUID": "d4078124-007c-4f5c-adb1-6e19fa2162eb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA : Save Organization Profile (NEGATIVE) - Validate email address format",
              "fullTitle": "SRA My Company SRA : Save Organization Profile (NEGATIVE) - Validate email address format",
              "timedOut": null,
              "duration": 3709,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "a62c55d7-b5e8-4447-bb97-a75cb3733b26",
              "parentUUID": "d4078124-007c-4f5c-adb1-6e19fa2162eb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA : Save Organization Profile (NEGATIVE) - Validate data types in all fields in name and location tab",
              "fullTitle": "SRA My Company SRA : Save Organization Profile (NEGATIVE) - Validate data types in all fields in name and location tab",
              "timedOut": null,
              "duration": 6261,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "fa15ab1a-8613-4ac2-af2e-623fc2004f7c",
              "parentUUID": "d4078124-007c-4f5c-adb1-6e19fa2162eb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA : Save Organization Profile (NEGATIVE) - Validate number fields on Network and System Tab",
              "fullTitle": "SRA My Company SRA : Save Organization Profile (NEGATIVE) - Validate number fields on Network and System Tab",
              "timedOut": null,
              "duration": 5689,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "a7f3b6ce-aa79-43ba-bc03-9361c5cb9b99",
              "parentUUID": "d4078124-007c-4f5c-adb1-6e19fa2162eb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA : Save Organization Profile (EDGE)  : Validate API results when saving all data in all tabs",
              "fullTitle": "SRA My Company SRA : Save Organization Profile (EDGE)  : Validate API results when saving all data in all tabs",
              "timedOut": null,
              "duration": 6581,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "7b763e56-9ff4-46f5-99be-916541539457",
              "parentUUID": "d4078124-007c-4f5c-adb1-6e19fa2162eb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA : Save Organization Profile (EDGE)  : Validate saved data in previous tabs",
              "fullTitle": "SRA My Company SRA : Save Organization Profile (EDGE)  : Validate saved data in previous tabs",
              "timedOut": null,
              "duration": 1971,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "bd4cc538-6d58-46f9-b9d7-69330a5dddd8",
              "parentUUID": "d4078124-007c-4f5c-adb1-6e19fa2162eb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA : Save Organization Profile (OOTB)  : Validate API click event when changing tabs",
              "fullTitle": "SRA My Company SRA : Save Organization Profile (OOTB)  : Validate API click event when changing tabs",
              "timedOut": null,
              "duration": 4327,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "094adbbb-c3b2-4a4c-9542-64b21e4bce3a",
              "parentUUID": "d4078124-007c-4f5c-adb1-6e19fa2162eb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA : Save Organization Profile (OOTB)  : Invalidate updating data without saving",
              "fullTitle": "SRA My Company SRA : Save Organization Profile (OOTB)  : Invalidate updating data without saving",
              "timedOut": null,
              "duration": 9818,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "47719f10-ec56-4251-8800-4cb0e02ea7cc",
              "parentUUID": "d4078124-007c-4f5c-adb1-6e19fa2162eb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA : Open Step 02 - Answer The Security Risk Assessment Questions",
              "fullTitle": "SRA My Company SRA : Open Step 02 - Answer The Security Risk Assessment Questions",
              "timedOut": null,
              "duration": 1557,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "26f1b946-0fa0-4480-9ed1-7297ca98ea17",
              "parentUUID": "d4078124-007c-4f5c-adb1-6e19fa2162eb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA : Open Step 02 - Save SRA Answers",
              "fullTitle": "SRA My Company SRA : Open Step 02 - Save SRA Answers",
              "timedOut": null,
              "duration": 62540,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "5a0c27bf-7550-4aaf-8be2-7962150b82e9",
              "parentUUID": "d4078124-007c-4f5c-adb1-6e19fa2162eb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA : Open Step 02 (EDGE) : Validate All list of questions based on categories",
              "fullTitle": "SRA My Company SRA : Open Step 02 (EDGE) : Validate All list of questions based on categories",
              "timedOut": null,
              "duration": 250615,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "4c6a2035-7896-4da1-8977-d88a07b32552",
              "parentUUID": "d4078124-007c-4f5c-adb1-6e19fa2162eb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA : Open Step 02 (EDGE) : Validate API results when saving questions",
              "fullTitle": "SRA My Company SRA : Open Step 02 (EDGE) : Validate API results when saving questions",
              "timedOut": null,
              "duration": 8803,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "2b20dce7-f378-462e-a675-7779b4ed4a9e",
              "parentUUID": "d4078124-007c-4f5c-adb1-6e19fa2162eb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA : Open Step 02 (NEGATIVE) : Invalidate answers without saving",
              "fullTitle": "SRA My Company SRA : Open Step 02 (NEGATIVE) : Invalidate answers without saving",
              "timedOut": null,
              "duration": 342,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "f64886ad-2234-4621-a6b2-e77665d32413",
              "parentUUID": "d4078124-007c-4f5c-adb1-6e19fa2162eb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA : Open Step 02 (NEGATIVE) : Disable return to previous button if first question is active",
              "fullTitle": "SRA My Company SRA : Open Step 02 (NEGATIVE) : Disable return to previous button if first question is active",
              "timedOut": null,
              "duration": 387,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "979e8faf-3650-4d81-b9d7-8b09e965c3fa",
              "parentUUID": "d4078124-007c-4f5c-adb1-6e19fa2162eb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA : Open Step 02 (NEGATIVE) : Validate save and next step button on the last question",
              "fullTitle": "SRA My Company SRA : Open Step 02 (NEGATIVE) : Validate save and next step button on the last question",
              "timedOut": null,
              "duration": 3031,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "a23655ba-4180-4f94-ae84-bed834cce78e",
              "parentUUID": "d4078124-007c-4f5c-adb1-6e19fa2162eb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA : Open Step 02 (OOTB) : Validate API click event when changing answers",
              "fullTitle": "SRA My Company SRA : Open Step 02 (OOTB) : Validate API click event when changing answers",
              "timedOut": null,
              "duration": 6096,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "ec1db9da-867d-4f68-b3f1-752f4fe07772",
              "parentUUID": "d4078124-007c-4f5c-adb1-6e19fa2162eb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e18da023-c2ed-4022-924a-ad3aaa3d42da",
            "6e8ab6a5-6f45-4e4f-beeb-92b82060c4cd",
            "b7feba19-0ca0-434c-a8ba-284be65174d9",
            "4c0d1727-6bf2-48ac-8f8a-6d5cb3a767a0",
            "ff8e9531-db4d-4c23-98c6-76db76f151ad",
            "e87d44c6-634c-4eb8-9481-49cd8ba9b15c",
            "582cb51c-f4fa-4581-9a2b-88ec7681881f",
            "0d7c3ae9-3053-403c-ba92-7a5f2cbec96a",
            "90125179-7f35-4879-a093-d3185296454c",
            "a62c55d7-b5e8-4447-bb97-a75cb3733b26",
            "fa15ab1a-8613-4ac2-af2e-623fc2004f7c",
            "a7f3b6ce-aa79-43ba-bc03-9361c5cb9b99",
            "7b763e56-9ff4-46f5-99be-916541539457",
            "bd4cc538-6d58-46f9-b9d7-69330a5dddd8",
            "094adbbb-c3b2-4a4c-9542-64b21e4bce3a",
            "47719f10-ec56-4251-8800-4cb0e02ea7cc",
            "26f1b946-0fa0-4480-9ed1-7297ca98ea17",
            "5a0c27bf-7550-4aaf-8be2-7962150b82e9",
            "4c6a2035-7896-4da1-8977-d88a07b32552",
            "2b20dce7-f378-462e-a675-7779b4ed4a9e",
            "f64886ad-2234-4621-a6b2-e77665d32413",
            "979e8faf-3650-4d81-b9d7-8b09e965c3fa",
            "a23655ba-4180-4f94-ae84-bed834cce78e",
            "ec1db9da-867d-4f68-b3f1-752f4fe07772"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 447346,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "8197cb26-a99d-46a5-977e-364439216dfd",
      "title": "",
      "fullFile": "cypress\\e2e\\hipaa-bpp\\manager-admin\\my-company\\sra_report.feature",
      "file": "cypress\\e2e\\hipaa-bpp\\manager-admin\\my-company\\sra_report.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "bbf860b6-cdf4-43f2-a7e9-88d86b7a38c5",
          "title": "SRA Report",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "My Company SRA Report : Default items should visible",
              "fullTitle": "SRA Report My Company SRA Report : Default items should visible",
              "timedOut": null,
              "duration": 20392,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "bcb370c4-eadd-4876-9683-9da848e55a2e",
              "parentUUID": "bbf860b6-cdf4-43f2-a7e9-88d86b7a38c5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA Report : Check texts/labels if visible",
              "fullTitle": "SRA Report My Company SRA Report : Check texts/labels if visible",
              "timedOut": null,
              "duration": 2338,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "51641099-ecf0-48a2-ae6a-f43aa4609e2b",
              "parentUUID": "bbf860b6-cdf4-43f2-a7e9-88d86b7a38c5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA Report : Add Security Incidents",
              "fullTitle": "SRA Report My Company SRA Report : Add Security Incidents",
              "timedOut": null,
              "duration": 10796,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "4075e545-7df5-47b8-a961-3ceb424499f6",
              "parentUUID": "bbf860b6-cdf4-43f2-a7e9-88d86b7a38c5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA Report : Validate created SRA Document",
              "fullTitle": "SRA Report My Company SRA Report : Validate created SRA Document",
              "timedOut": null,
              "duration": 95238,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {
                "message": "AssertionError: Timed out retrying after 95000ms: Expected to find element: `//tbody/tr[1]/td[5]/a[1]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 95000ms: Expected to find element: `//tbody/tr[1]/td[5]/a[1]`, but never found it.\n    at companySRAreport.sraTypes (cypress/page-objects/internal-bpp/partner-admin/my-company/sra_report.ts:143:40)\n    at Context.eval (cypress/e2e/hipaa-bpp/manager-admin/my-company/sra_report/company_sra_report.ts:103:20)\n    at Context.resolveAndRunStepDefinition (node_modules/cypress-cucumber-preprocessor/lib/resolveStepDefinition.js:193:0)\n    at Context.eval (node_modules/cypress-cucumber-preprocessor/lib/createTestFromScenario.js:27:0)",
                "diff": null
              },
              "uuid": "8fb64890-c3d4-4f43-bf38-6023f5206e94",
              "parentUUID": "bbf860b6-cdf4-43f2-a7e9-88d86b7a38c5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA Report : Edit existing SRA Document",
              "fullTitle": "SRA Report My Company SRA Report : Edit existing SRA Document",
              "timedOut": null,
              "duration": 11135,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "dca444ad-b02c-4930-a652-97f9f328433f",
              "parentUUID": "bbf860b6-cdf4-43f2-a7e9-88d86b7a38c5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA Report (OOTB) : Validate uploading oversize file",
              "fullTitle": "SRA Report My Company SRA Report (OOTB) : Validate uploading oversize file",
              "timedOut": null,
              "duration": 16705,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "b7559003-3ae4-49ea-8f0a-cf76c209532c",
              "parentUUID": "bbf860b6-cdf4-43f2-a7e9-88d86b7a38c5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA Report : Delete existing SRA Document",
              "fullTitle": "SRA Report My Company SRA Report : Delete existing SRA Document",
              "timedOut": null,
              "duration": 3449,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "1994501d-de93-4972-9ec1-14dae69b6789",
              "parentUUID": "bbf860b6-cdf4-43f2-a7e9-88d86b7a38c5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company SRA Report : Download SRA Appendix",
              "fullTitle": "SRA Report My Company SRA Report : Download SRA Appendix",
              "timedOut": null,
              "duration": 2613,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "53b4ec3e-23f6-4494-b3c3-c306156697e0",
              "parentUUID": "bbf860b6-cdf4-43f2-a7e9-88d86b7a38c5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bcb370c4-eadd-4876-9683-9da848e55a2e",
            "51641099-ecf0-48a2-ae6a-f43aa4609e2b",
            "4075e545-7df5-47b8-a961-3ceb424499f6",
            "dca444ad-b02c-4930-a652-97f9f328433f",
            "b7559003-3ae4-49ea-8f0a-cf76c209532c",
            "1994501d-de93-4972-9ec1-14dae69b6789",
            "53b4ec3e-23f6-4494-b3c3-c306156697e0"
          ],
          "failures": [
            "8fb64890-c3d4-4f43-bf38-6023f5206e94"
          ],
          "pending": [],
          "skipped": [],
          "duration": 162666,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "225950e4-139e-4ef1-afde-1c5637964267",
      "title": "",
      "fullFile": "cypress\\e2e\\hipaa-bpp\\manager-admin\\my-company\\track.feature",
      "file": "cypress\\e2e\\hipaa-bpp\\manager-admin\\my-company\\track.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4622399e-fd23-44e1-a788-d0f7bee8dc5e",
          "title": "Tracking",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "My Company Track : Default items should visible",
              "fullTitle": "Tracking My Company Track : Default items should visible",
              "timedOut": null,
              "duration": 22735,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "dc45a34c-be72-485c-ad15-09a76f4b2e91",
              "parentUUID": "4622399e-fd23-44e1-a788-d0f7bee8dc5e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Track : Check texts/labels if visible",
              "fullTitle": "Tracking My Company Track : Check texts/labels if visible",
              "timedOut": null,
              "duration": 2132,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "39c1eaf0-f77a-4881-b1e2-2bc2dcaf8e4f",
              "parentUUID": "4622399e-fd23-44e1-a788-d0f7bee8dc5e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Track : Add Security Incidents",
              "fullTitle": "Tracking My Company Track : Add Security Incidents",
              "timedOut": null,
              "duration": 42565,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "1baecc10-b149-4e6f-be12-f9da409f8474",
              "parentUUID": "4622399e-fd23-44e1-a788-d0f7bee8dc5e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Track : Validate created Security Incidents",
              "fullTitle": "Tracking My Company Track : Validate created Security Incidents",
              "timedOut": null,
              "duration": 2091,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "98180f11-5d2a-471c-b822-63f27a7fd073",
              "parentUUID": "4622399e-fd23-44e1-a788-d0f7bee8dc5e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Track : Edit existing Security Incidents",
              "fullTitle": "Tracking My Company Track : Edit existing Security Incidents",
              "timedOut": null,
              "duration": 17702,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "d4b5c29a-f708-4f0b-8303-6f420a4919ff",
              "parentUUID": "4622399e-fd23-44e1-a788-d0f7bee8dc5e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Track : Delete Security Incidents",
              "fullTitle": "Tracking My Company Track : Delete Security Incidents",
              "timedOut": null,
              "duration": 4367,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "b27d2f85-f3e5-4e14-830b-ccb4d17447a6",
              "parentUUID": "4622399e-fd23-44e1-a788-d0f7bee8dc5e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Track : Add Server Room Access",
              "fullTitle": "Tracking My Company Track : Add Server Room Access",
              "timedOut": null,
              "duration": 9652,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "60c1d6ff-6a21-4db0-b1c9-98cb7d3fe587",
              "parentUUID": "4622399e-fd23-44e1-a788-d0f7bee8dc5e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Track : Validate Server Room Access",
              "fullTitle": "Tracking My Company Track : Validate Server Room Access",
              "timedOut": null,
              "duration": 2110,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "c812764e-5186-426e-98db-fb4b810a5c5e",
              "parentUUID": "4622399e-fd23-44e1-a788-d0f7bee8dc5e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Track : Edit Server Room Access",
              "fullTitle": "Tracking My Company Track : Edit Server Room Access",
              "timedOut": null,
              "duration": 12590,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "ae402568-4c1f-422f-a740-f92d5f71c3cf",
              "parentUUID": "4622399e-fd23-44e1-a788-d0f7bee8dc5e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Track : Delete Server Room Access",
              "fullTitle": "Tracking My Company Track : Delete Server Room Access",
              "timedOut": null,
              "duration": 4626,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "289443bc-f70a-4bf3-a4bf-92e1f2a53752",
              "parentUUID": "4622399e-fd23-44e1-a788-d0f7bee8dc5e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Track (NEGATIVE): Validate Number of Records on Security Incident",
              "fullTitle": "Tracking My Company Track (NEGATIVE): Validate Number of Records on Security Incident",
              "timedOut": null,
              "duration": 3962,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "3bc5cb2f-e853-4ade-8567-90e67fa84ae6",
              "parentUUID": "4622399e-fd23-44e1-a788-d0f7bee8dc5e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Track (NEGATIVE): Invalidate creating new Security Incident when Discovery Date is prior to Date of Incident",
              "fullTitle": "Tracking My Company Track (NEGATIVE): Invalidate creating new Security Incident when Discovery Date is prior to Date of Incident",
              "timedOut": null,
              "duration": 4171,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "aab87bbf-d3ff-418f-a41e-da3c0deeedd2",
              "parentUUID": "4622399e-fd23-44e1-a788-d0f7bee8dc5e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Track (NEGATIVE): Validate other system involved textbox",
              "fullTitle": "Tracking My Company Track (NEGATIVE): Validate other system involved textbox",
              "timedOut": null,
              "duration": 4590,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "fca07b00-b406-4d9a-82b1-83645f61278a",
              "parentUUID": "4622399e-fd23-44e1-a788-d0f7bee8dc5e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Track (OOTB): Validate saving Security Incident when description of incident has 4 or more characters",
              "fullTitle": "Tracking My Company Track (OOTB): Validate saving Security Incident when description of incident has 4 or more characters",
              "timedOut": null,
              "duration": 4372,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "8ccee1e7-f9a0-4988-9539-a3377b201979",
              "parentUUID": "4622399e-fd23-44e1-a788-d0f7bee8dc5e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Track (OOTB): Validate API click event when closing Security Incident modal",
              "fullTitle": "Tracking My Company Track (OOTB): Validate API click event when closing Security Incident modal",
              "timedOut": null,
              "duration": 4553,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "8b094fc9-9499-4b6b-b8e6-9d9cdc9643da",
              "parentUUID": "4622399e-fd23-44e1-a788-d0f7bee8dc5e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Track (EDGE): Validate cancelation on creating Security Incident",
              "fullTitle": "Tracking My Company Track (EDGE): Validate cancelation on creating Security Incident",
              "timedOut": null,
              "duration": 4575,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "86a08ed7-c422-474b-afbb-a06b236300ae",
              "parentUUID": "4622399e-fd23-44e1-a788-d0f7bee8dc5e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Track (EDGE): Validate other cause of incident textbox",
              "fullTitle": "Tracking My Company Track (EDGE): Validate other cause of incident textbox",
              "timedOut": null,
              "duration": 4918,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "3da771b2-00a4-4d27-abef-ce090e6a452c",
              "parentUUID": "4622399e-fd23-44e1-a788-d0f7bee8dc5e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Track (NEGATIVE): Validate What was changed textarea",
              "fullTitle": "Tracking My Company Track (NEGATIVE): Validate What was changed textarea",
              "timedOut": null,
              "duration": 4765,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "5702c6be-a59c-4362-a972-fbb43588ed95",
              "parentUUID": "4622399e-fd23-44e1-a788-d0f7bee8dc5e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Track (OOTB): Validate saving Server Room Access when Person accessing server room has 4 or more characters",
              "fullTitle": "Tracking My Company Track (OOTB): Validate saving Server Room Access when Person accessing server room has 4 or more characters",
              "timedOut": null,
              "duration": 3802,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "51aea858-6f99-46be-bb12-42064b02b93f",
              "parentUUID": "4622399e-fd23-44e1-a788-d0f7bee8dc5e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Track (OOTB): Validate API click event when closing and open Server Room Access modal",
              "fullTitle": "Tracking My Company Track (OOTB): Validate API click event when closing and open Server Room Access modal",
              "timedOut": null,
              "duration": 2047,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "695086ed-096b-447e-b701-57791d89125e",
              "parentUUID": "4622399e-fd23-44e1-a788-d0f7bee8dc5e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Track (EDGE): Validate cancelation on creating Server Room Access",
              "fullTitle": "Tracking My Company Track (EDGE): Validate cancelation on creating Server Room Access",
              "timedOut": null,
              "duration": 4399,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "78b19afb-3032-4a61-84c8-206c9339fc37",
              "parentUUID": "4622399e-fd23-44e1-a788-d0f7bee8dc5e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dc45a34c-be72-485c-ad15-09a76f4b2e91",
            "39c1eaf0-f77a-4881-b1e2-2bc2dcaf8e4f",
            "1baecc10-b149-4e6f-be12-f9da409f8474",
            "98180f11-5d2a-471c-b822-63f27a7fd073",
            "d4b5c29a-f708-4f0b-8303-6f420a4919ff",
            "b27d2f85-f3e5-4e14-830b-ccb4d17447a6",
            "60c1d6ff-6a21-4db0-b1c9-98cb7d3fe587",
            "c812764e-5186-426e-98db-fb4b810a5c5e",
            "ae402568-4c1f-422f-a740-f92d5f71c3cf",
            "289443bc-f70a-4bf3-a4bf-92e1f2a53752",
            "3bc5cb2f-e853-4ade-8567-90e67fa84ae6",
            "aab87bbf-d3ff-418f-a41e-da3c0deeedd2",
            "fca07b00-b406-4d9a-82b1-83645f61278a",
            "8ccee1e7-f9a0-4988-9539-a3377b201979",
            "8b094fc9-9499-4b6b-b8e6-9d9cdc9643da",
            "86a08ed7-c422-474b-afbb-a06b236300ae",
            "3da771b2-00a4-4d27-abef-ce090e6a452c",
            "5702c6be-a59c-4362-a972-fbb43588ed95",
            "51aea858-6f99-46be-bb12-42064b02b93f",
            "695086ed-096b-447e-b701-57791d89125e",
            "78b19afb-3032-4a61-84c8-206c9339fc37"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 166724,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "c4f91f04-658d-4229-b6ec-7aa47df40a6e",
      "title": "",
      "fullFile": "cypress\\e2e\\hipaa-bpp\\manager-admin\\my-company\\training_reports.feature",
      "file": "cypress\\e2e\\hipaa-bpp\\manager-admin\\my-company\\training_reports.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1d4cb69e-3e43-4a5b-aea5-66fb579cb27d",
          "title": "Training Reports",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "My Company Training Reports : Default items should visible on Annual Training",
              "fullTitle": "Training Reports My Company Training Reports : Default items should visible on Annual Training",
              "timedOut": null,
              "duration": 21838,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "a4824845-4279-4666-a3fe-128a59487796",
              "parentUUID": "1d4cb69e-3e43-4a5b-aea5-66fb579cb27d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Training Reports : Check texts/labels if visible on Micro Training",
              "fullTitle": "Training Reports My Company Training Reports : Check texts/labels if visible on Micro Training",
              "timedOut": null,
              "duration": 2242,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "d8cfae80-a281-4334-b142-5d3dd352ea33",
              "parentUUID": "1d4cb69e-3e43-4a5b-aea5-66fb579cb27d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Training Reports : Download Annual Training Report",
              "fullTitle": "Training Reports My Company Training Reports : Download Annual Training Report",
              "timedOut": null,
              "duration": 7910,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "4df1e074-b5c2-4d3f-9f09-e5856fe8424c",
              "parentUUID": "1d4cb69e-3e43-4a5b-aea5-66fb579cb27d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Training Reports : View and download certificate",
              "fullTitle": "Training Reports My Company Training Reports : View and download certificate",
              "timedOut": null,
              "duration": 11704,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "d8dbaa7a-93d7-4a06-b6df-385ddf86fdea",
              "parentUUID": "1d4cb69e-3e43-4a5b-aea5-66fb579cb27d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Training Reports : Validate current course",
              "fullTitle": "Training Reports My Company Training Reports : Validate current course",
              "timedOut": null,
              "duration": 8153,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "69b64ea9-7d6d-4b49-8e69-e221b30ec966",
              "parentUUID": "1d4cb69e-3e43-4a5b-aea5-66fb579cb27d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Training Reports : View by Micro Training",
              "fullTitle": "Training Reports My Company Training Reports : View by Micro Training",
              "timedOut": null,
              "duration": 8907,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "404203ab-663c-42f2-935a-d912d56b09cb",
              "parentUUID": "1d4cb69e-3e43-4a5b-aea5-66fb579cb27d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Training Reports : View by users",
              "fullTitle": "Training Reports My Company Training Reports : View by users",
              "timedOut": null,
              "duration": 6625,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "4d819a23-ccb0-45af-8a99-17bfd95905f6",
              "parentUUID": "1d4cb69e-3e43-4a5b-aea5-66fb579cb27d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Training Reports : Download Micro Training",
              "fullTitle": "Training Reports My Company Training Reports : Download Micro Training",
              "timedOut": null,
              "duration": 63,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "25267204-e56b-467b-978e-e9da4ca4fcf6",
              "parentUUID": "1d4cb69e-3e43-4a5b-aea5-66fb579cb27d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Training Reports : Validate search on non-existing users",
              "fullTitle": "Training Reports My Company Training Reports : Validate search on non-existing users",
              "timedOut": null,
              "duration": 8428,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "28da1743-ffc4-41f1-95f0-e6e9ff79fa13",
              "parentUUID": "1d4cb69e-3e43-4a5b-aea5-66fb579cb27d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Company Training Reports : Validate search on micro training",
              "fullTitle": "Training Reports My Company Training Reports : Validate search on micro training",
              "timedOut": null,
              "duration": 8737,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "5a17626f-3c83-405e-9b10-1ca4b50764f5",
              "parentUUID": "1d4cb69e-3e43-4a5b-aea5-66fb579cb27d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a4824845-4279-4666-a3fe-128a59487796",
            "d8cfae80-a281-4334-b142-5d3dd352ea33",
            "4df1e074-b5c2-4d3f-9f09-e5856fe8424c",
            "d8dbaa7a-93d7-4a06-b6df-385ddf86fdea",
            "69b64ea9-7d6d-4b49-8e69-e221b30ec966",
            "404203ab-663c-42f2-935a-d912d56b09cb",
            "4d819a23-ccb0-45af-8a99-17bfd95905f6",
            "25267204-e56b-467b-978e-e9da4ca4fcf6",
            "28da1743-ffc4-41f1-95f0-e6e9ff79fa13",
            "5a17626f-3c83-405e-9b10-1ca4b50764f5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 84607,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "adc33716-7223-48ef-9a9b-4c7dbf0715b7",
      "title": "",
      "fullFile": "cypress\\e2e\\hipaa-bpp\\manager-admin\\my-dashboard\\manager-admin-dark-web.feature",
      "file": "cypress\\e2e\\hipaa-bpp\\manager-admin\\my-dashboard\\manager-admin-dark-web.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5631418e-8a4e-472a-a44c-224756eae48b",
          "title": "Dark Web - Run DWBA",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "My Dashboard - Dark Web : Default items should visible",
              "fullTitle": "Dark Web - Run DWBA My Dashboard - Dark Web : Default items should visible",
              "timedOut": null,
              "duration": 17542,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "d432daf7-e77b-46c7-af4b-50e41dc9e6da",
              "parentUUID": "5631418e-8a4e-472a-a44c-224756eae48b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Dark Web : Check texts/labels if visible",
              "fullTitle": "Dark Web - Run DWBA My Dashboard - Dark Web : Check texts/labels if visible",
              "timedOut": null,
              "duration": 302,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "1c1e206d-07ab-4764-b306-6091c3972483",
              "parentUUID": "5631418e-8a4e-472a-a44c-224756eae48b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Dark Web : Validate check emails associated with any external data breaches",
              "fullTitle": "Dark Web - Run DWBA My Dashboard - Dark Web : Validate check emails associated with any external data breaches",
              "timedOut": null,
              "duration": 5595,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "1641488d-a642-4259-bc11-fa40b05129d3",
              "parentUUID": "5631418e-8a4e-472a-a44c-224756eae48b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Dark Web : Validate check emails not associated with any external data breaches",
              "fullTitle": "Dark Web - Run DWBA My Dashboard - Dark Web : Validate check emails not associated with any external data breaches",
              "timedOut": null,
              "duration": 2242,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "2b6b8024-51c4-414c-af34-c1f9f54dc10f",
              "parentUUID": "5631418e-8a4e-472a-a44c-224756eae48b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Dark Web (NEGATIVE) : Invalidate checking with empty email address field",
              "fullTitle": "Dark Web - Run DWBA My Dashboard - Dark Web (NEGATIVE) : Invalidate checking with empty email address field",
              "timedOut": null,
              "duration": 247,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "3eb92420-da62-4db0-9597-da824f85280a",
              "parentUUID": "5631418e-8a4e-472a-a44c-224756eae48b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Dark Web (NEGATIVE) : Invalidate check email with invalid email format",
              "fullTitle": "Dark Web - Run DWBA My Dashboard - Dark Web (NEGATIVE) : Invalidate check email with invalid email format",
              "timedOut": null,
              "duration": 820,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "25e3b6e7-f41f-4d63-a211-51f51cd98ce0",
              "parentUUID": "5631418e-8a4e-472a-a44c-224756eae48b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Dark Web (NEGATIVE) : Validate table results after updating or clearing email address field",
              "fullTitle": "Dark Web - Run DWBA My Dashboard - Dark Web (NEGATIVE) : Validate table results after updating or clearing email address field",
              "timedOut": null,
              "duration": 5768,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "f670147e-c968-4f89-9356-53753866148e",
              "parentUUID": "5631418e-8a4e-472a-a44c-224756eae48b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Dark Web (OOTB) : Reset table results after page refresh",
              "fullTitle": "Dark Web - Run DWBA My Dashboard - Dark Web (OOTB) : Reset table results after page refresh",
              "timedOut": null,
              "duration": 2537,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "c59fa95e-22e4-491d-95ac-b11e37fae34e",
              "parentUUID": "5631418e-8a4e-472a-a44c-224756eae48b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Dark Web (OOTB) : Validate API results when generating results",
              "fullTitle": "Dark Web - Run DWBA My Dashboard - Dark Web (OOTB) : Validate API results when generating results",
              "timedOut": null,
              "duration": 3660,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "ad706e48-7443-4d8c-a193-a9c802b82846",
              "parentUUID": "5631418e-8a4e-472a-a44c-224756eae48b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Dark Web (EDGE) : Validate column sorting",
              "fullTitle": "Dark Web - Run DWBA My Dashboard - Dark Web (EDGE) : Validate column sorting",
              "timedOut": null,
              "duration": 10640,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "18c91db1-8548-4fd8-8cae-5221cb6c16cf",
              "parentUUID": "5631418e-8a4e-472a-a44c-224756eae48b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Dark Web (EDGE) : Validate return results on Compromised Data",
              "fullTitle": "Dark Web - Run DWBA My Dashboard - Dark Web (EDGE) : Validate return results on Compromised Data",
              "timedOut": null,
              "duration": 222,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "239bfdd7-cf2e-42fe-b8a5-e2dfafdaa544",
              "parentUUID": "5631418e-8a4e-472a-a44c-224756eae48b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d432daf7-e77b-46c7-af4b-50e41dc9e6da",
            "1c1e206d-07ab-4764-b306-6091c3972483",
            "1641488d-a642-4259-bc11-fa40b05129d3",
            "2b6b8024-51c4-414c-af34-c1f9f54dc10f",
            "3eb92420-da62-4db0-9597-da824f85280a",
            "25e3b6e7-f41f-4d63-a211-51f51cd98ce0",
            "f670147e-c968-4f89-9356-53753866148e",
            "c59fa95e-22e4-491d-95ac-b11e37fae34e",
            "ad706e48-7443-4d8c-a193-a9c802b82846",
            "18c91db1-8548-4fd8-8cae-5221cb6c16cf",
            "239bfdd7-cf2e-42fe-b8a5-e2dfafdaa544"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 49575,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "729bf869-d04a-4667-bffc-ba7b2c9a4490",
      "title": "",
      "fullFile": "cypress\\e2e\\hipaa-bpp\\manager-admin\\my-dashboard\\manager-admin-micro-training.feature",
      "file": "cypress\\e2e\\hipaa-bpp\\manager-admin\\my-dashboard\\manager-admin-micro-training.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4cfde511-9863-48ce-94a6-5eb46b98f093",
          "title": "Micro Training",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "My Dashboard - Micro Training : Default items should visible",
              "fullTitle": "Micro Training My Dashboard - Micro Training : Default items should visible",
              "timedOut": null,
              "duration": 17950,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "3ea45660-4996-41f4-b7da-7db947c66c5a",
              "parentUUID": "4cfde511-9863-48ce-94a6-5eb46b98f093",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Micro Training : Check texts/labels if visible",
              "fullTitle": "Micro Training My Dashboard - Micro Training : Check texts/labels if visible",
              "timedOut": null,
              "duration": 639,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "b436b925-56cb-408d-ad15-2257f788fab5",
              "parentUUID": "4cfde511-9863-48ce-94a6-5eb46b98f093",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Micro Training : Validate All existing micro Trainings",
              "fullTitle": "Micro Training My Dashboard - Micro Training : Validate All existing micro Trainings",
              "timedOut": null,
              "duration": 31236,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "95a362b6-1854-4748-935b-d965b35b6eb5",
              "parentUUID": "4cfde511-9863-48ce-94a6-5eb46b98f093",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Micro Training (EDGE): Validate all unsubmitted answers on micro trainings",
              "fullTitle": "Micro Training My Dashboard - Micro Training (EDGE): Validate all unsubmitted answers on micro trainings",
              "timedOut": null,
              "duration": 37527,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "94034d15-d910-44fb-b041-54aea05c6af1",
              "parentUUID": "4cfde511-9863-48ce-94a6-5eb46b98f093",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Micro Training (EDGE) : Validate all answered on micro trainings",
              "fullTitle": "Micro Training My Dashboard - Micro Training (EDGE) : Validate all answered on micro trainings",
              "timedOut": null,
              "duration": 46632,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "441ca9ba-62a4-4bf9-a5fc-cddd3d24b648",
              "parentUUID": "4cfde511-9863-48ce-94a6-5eb46b98f093",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Micro Training (NEGATIVE) : Validate submission button and answers on submitted trainings",
              "fullTitle": "Micro Training My Dashboard - Micro Training (NEGATIVE) : Validate submission button and answers on submitted trainings",
              "timedOut": null,
              "duration": 7392,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "cb4e1118-224b-4f8c-8e7e-051e225a7cc7",
              "parentUUID": "4cfde511-9863-48ce-94a6-5eb46b98f093",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Micro Training (NEGATIVE) : Validate disable submit button if no answers",
              "fullTitle": "Micro Training My Dashboard - Micro Training (NEGATIVE) : Validate disable submit button if no answers",
              "timedOut": null,
              "duration": 7759,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "566be112-5916-4c62-a29f-9a7d833ebbee",
              "parentUUID": "4cfde511-9863-48ce-94a6-5eb46b98f093",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Micro Training : Validate answer selections on unsubmitted micto trainings",
              "fullTitle": "Micro Training My Dashboard - Micro Training : Validate answer selections on unsubmitted micto trainings",
              "timedOut": null,
              "duration": 7976,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "bc311288-879b-4648-bcbc-ce1703fb5f5b",
              "parentUUID": "4cfde511-9863-48ce-94a6-5eb46b98f093",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3ea45660-4996-41f4-b7da-7db947c66c5a",
            "b436b925-56cb-408d-ad15-2257f788fab5",
            "95a362b6-1854-4748-935b-d965b35b6eb5",
            "94034d15-d910-44fb-b041-54aea05c6af1",
            "441ca9ba-62a4-4bf9-a5fc-cddd3d24b648",
            "cb4e1118-224b-4f8c-8e7e-051e225a7cc7",
            "566be112-5916-4c62-a29f-9a7d833ebbee",
            "bc311288-879b-4648-bcbc-ce1703fb5f5b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 157111,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "829283ed-34b0-44de-88af-94141cee7d76",
      "title": "",
      "fullFile": "cypress\\e2e\\hipaa-bpp\\manager-admin\\my-dashboard\\manager-admin-newsletters.feature",
      "file": "cypress\\e2e\\hipaa-bpp\\manager-admin\\my-dashboard\\manager-admin-newsletters.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "81cf0170-57d9-4045-bd1c-c71df1a1b6f4",
          "title": "Newsletters",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "My Dashboard - Newsletters : Default items should visible",
              "fullTitle": "Newsletters My Dashboard - Newsletters : Default items should visible",
              "timedOut": null,
              "duration": 22166,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "898e4327-f612-47fc-9e58-c964865d4fff",
              "parentUUID": "81cf0170-57d9-4045-bd1c-c71df1a1b6f4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Newsletters : Check texts/labels if visible",
              "fullTitle": "Newsletters My Dashboard - Newsletters : Check texts/labels if visible",
              "timedOut": null,
              "duration": 31828,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "d741d5b9-448f-4797-88c2-fb70fb6acc3a",
              "parentUUID": "81cf0170-57d9-4045-bd1c-c71df1a1b6f4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Newsletters : Validate newsletters pdf reports",
              "fullTitle": "Newsletters My Dashboard - Newsletters : Validate newsletters pdf reports",
              "timedOut": null,
              "duration": 3900,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "8fff517d-1027-4403-9ebd-ef55624729d3",
              "parentUUID": "81cf0170-57d9-4045-bd1c-c71df1a1b6f4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "898e4327-f612-47fc-9e58-c964865d4fff",
            "d741d5b9-448f-4797-88c2-fb70fb6acc3a",
            "8fff517d-1027-4403-9ebd-ef55624729d3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 57894,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e5996d91-987e-4264-9c8e-a120e9d376bb",
      "title": "",
      "fullFile": "cypress\\e2e\\hipaa-bpp\\manager-admin\\my-dashboard\\manager-admin-policies.feature",
      "file": "cypress\\e2e\\hipaa-bpp\\manager-admin\\my-dashboard\\manager-admin-policies.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e3cbea73-ca15-4bd1-b730-a4ba9bde902f",
          "title": "Policy & Procedure",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Reset P & P : Reset Policies",
              "fullTitle": "Policy & Procedure Reset P & P : Reset Policies",
              "timedOut": null,
              "duration": 42267,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "99095844-3ef3-4a0b-9a75-a04b8c607a6f",
              "parentUUID": "e3cbea73-ca15-4bd1-b730-a4ba9bde902f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Reset P & P : Reset Other Policies",
              "fullTitle": "Policy & Procedure Reset P & P : Reset Other Policies",
              "timedOut": null,
              "duration": 8540,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "b1b92985-c510-405e-be7d-6f1e8b737196",
              "parentUUID": "e3cbea73-ca15-4bd1-b730-a4ba9bde902f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Reset P & P : Default items should visible",
              "fullTitle": "Policy & Procedure Reset P & P : Default items should visible",
              "timedOut": null,
              "duration": 11826,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "747642b8-f997-4f5e-8392-180136b6bcdc",
              "parentUUID": "e3cbea73-ca15-4bd1-b730-a4ba9bde902f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Reset P & P : Check texts/labels if visible",
              "fullTitle": "Policy & Procedure Reset P & P : Check texts/labels if visible",
              "timedOut": null,
              "duration": 487,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "f526eb0b-a14f-41c4-989a-a007aca6ef91",
              "parentUUID": "e3cbea73-ca15-4bd1-b730-a4ba9bde902f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Acknowledge All policies",
              "fullTitle": "Policy & Procedure Acknowledge All policies",
              "timedOut": null,
              "duration": 19533,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "9ffa751d-20a9-410e-a2f8-169bfd276eff",
              "parentUUID": "e3cbea73-ca15-4bd1-b730-a4ba9bde902f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Acknowledge All other policies",
              "fullTitle": "Policy & Procedure Acknowledge All other policies",
              "timedOut": null,
              "duration": 8687,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "6bc6bcd5-0c8b-494b-86a6-5b1edf14e645",
              "parentUUID": "e3cbea73-ca15-4bd1-b730-a4ba9bde902f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Dashboard Policies (OOTB) : Validate API status when downloading all existing policies",
              "fullTitle": "Policy & Procedure Dashboard Policies (OOTB) : Validate API status when downloading all existing policies",
              "timedOut": null,
              "duration": 10754,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "00610800-4a83-4ce9-801f-1984e45cf2c3",
              "parentUUID": "e3cbea73-ca15-4bd1-b730-a4ba9bde902f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Dashboard Policies (OOTB) : Validate API status when downloading other policies",
              "fullTitle": "Policy & Procedure Dashboard Policies (OOTB) : Validate API status when downloading other policies",
              "timedOut": null,
              "duration": 4250,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "ee04959b-002f-4f54-96f2-1df90fc64f97",
              "parentUUID": "e3cbea73-ca15-4bd1-b730-a4ba9bde902f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Dashboard Policies (NEGATIVE) : Hide created and modified date in other policies",
              "fullTitle": "Policy & Procedure Dashboard Policies (NEGATIVE) : Hide created and modified date in other policies",
              "timedOut": null,
              "duration": 2387,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "b6eb2801-4d51-4847-bd04-2259bbe9e2ad",
              "parentUUID": "e3cbea73-ca15-4bd1-b730-a4ba9bde902f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Dashboard Policies (NEGATIVE) : Hide created and modified date in existing policies",
              "fullTitle": "Policy & Procedure Dashboard Policies (NEGATIVE) : Hide created and modified date in existing policies",
              "timedOut": null,
              "duration": 2362,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "c050daaf-3af6-4369-b9d5-8be80e230f02",
              "parentUUID": "e3cbea73-ca15-4bd1-b730-a4ba9bde902f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Dashboard Policies (EDGE) : Validate existing policies via modal",
              "fullTitle": "Policy & Procedure Dashboard Policies (EDGE) : Validate existing policies via modal",
              "timedOut": null,
              "duration": 8940,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "2320f5bb-48fc-4610-8ac0-3447ef2db8b7",
              "parentUUID": "e3cbea73-ca15-4bd1-b730-a4ba9bde902f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Dashboard Policies (EDGE) : Validate other policies via modal",
              "fullTitle": "Policy & Procedure Dashboard Policies (EDGE) : Validate other policies via modal",
              "timedOut": null,
              "duration": 6710,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "5b119511-2b3e-4904-93fd-b3f41bc74889",
              "parentUUID": "e3cbea73-ca15-4bd1-b730-a4ba9bde902f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "99095844-3ef3-4a0b-9a75-a04b8c607a6f",
            "b1b92985-c510-405e-be7d-6f1e8b737196",
            "747642b8-f997-4f5e-8392-180136b6bcdc",
            "f526eb0b-a14f-41c4-989a-a007aca6ef91",
            "9ffa751d-20a9-410e-a2f8-169bfd276eff",
            "6bc6bcd5-0c8b-494b-86a6-5b1edf14e645",
            "00610800-4a83-4ce9-801f-1984e45cf2c3",
            "ee04959b-002f-4f54-96f2-1df90fc64f97",
            "b6eb2801-4d51-4847-bd04-2259bbe9e2ad",
            "c050daaf-3af6-4369-b9d5-8be80e230f02",
            "2320f5bb-48fc-4610-8ac0-3447ef2db8b7",
            "5b119511-2b3e-4904-93fd-b3f41bc74889"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 126743,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "cc58ec46-2afd-4889-bb7f-c9fc6b811e8d",
      "title": "",
      "fullFile": "cypress\\e2e\\hipaa-bpp\\manager-admin\\my-dashboard\\manager-admin-training.feature",
      "file": "cypress\\e2e\\hipaa-bpp\\manager-admin\\my-dashboard\\manager-admin-training.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "75773332-e9be-4af7-8004-625b9547023c",
          "title": "Training",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "My Dashboard - Training : Default items should visible",
              "fullTitle": "Training My Dashboard - Training : Default items should visible",
              "timedOut": null,
              "duration": 18894,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "457415c2-5f9c-4355-bd6a-48277b25ae7b",
              "parentUUID": "75773332-e9be-4af7-8004-625b9547023c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Training : Check texts/labels if visible",
              "fullTitle": "Training My Dashboard - Training : Check texts/labels if visible",
              "timedOut": null,
              "duration": 257,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "2595e542-858a-4dc8-92cd-c0b4b965292b",
              "parentUUID": "75773332-e9be-4af7-8004-625b9547023c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Training : Validate Cybersecurity Training Videos",
              "fullTitle": "Training My Dashboard - Training : Validate Cybersecurity Training Videos",
              "timedOut": null,
              "duration": 10614,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "771bb4e6-633e-4fcf-a7b7-65462ef54b35",
              "parentUUID": "75773332-e9be-4af7-8004-625b9547023c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Training : Validate Optionial Manager Training",
              "fullTitle": "Training My Dashboard - Training : Validate Optionial Manager Training",
              "timedOut": null,
              "duration": 10788,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "1919b8c1-0d38-444d-ab81-1d5b04dd061f",
              "parentUUID": "75773332-e9be-4af7-8004-625b9547023c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Training (EDGE) : Validate Security Quiz",
              "fullTitle": "Training My Dashboard - Training (EDGE) : Validate Security Quiz",
              "timedOut": null,
              "duration": 27013,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "73c689c4-5f18-4a06-8262-88be533613d8",
              "parentUUID": "75773332-e9be-4af7-8004-625b9547023c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Training (EDGE) : Validate Reviewing Security Quiz",
              "fullTitle": "Training My Dashboard - Training (EDGE) : Validate Reviewing Security Quiz",
              "timedOut": null,
              "duration": 3629,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "cbe96a76-b0e0-4562-a2ee-0a644d7b3db6",
              "parentUUID": "75773332-e9be-4af7-8004-625b9547023c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Training : Validate Retaking Security Quiz",
              "fullTitle": "Training My Dashboard - Training : Validate Retaking Security Quiz",
              "timedOut": null,
              "duration": 8056,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "74661871-9052-4e48-9ad9-b2e2984aa4c5",
              "parentUUID": "75773332-e9be-4af7-8004-625b9547023c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Training : Validate Step 3 - Print Your Certificate",
              "fullTitle": "Training My Dashboard - Training : Validate Step 3 - Print Your Certificate",
              "timedOut": null,
              "duration": 7098,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "7b8b1d76-30b8-4c11-a82f-5e1dfaf6dc63",
              "parentUUID": "75773332-e9be-4af7-8004-625b9547023c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "457415c2-5f9c-4355-bd6a-48277b25ae7b",
            "2595e542-858a-4dc8-92cd-c0b4b965292b",
            "771bb4e6-633e-4fcf-a7b7-65462ef54b35",
            "1919b8c1-0d38-444d-ab81-1d5b04dd061f",
            "73c689c4-5f18-4a06-8262-88be533613d8",
            "cbe96a76-b0e0-4562-a2ee-0a644d7b3db6",
            "74661871-9052-4e48-9ad9-b2e2984aa4c5",
            "7b8b1d76-30b8-4c11-a82f-5e1dfaf6dc63"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 86349,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "c91f06b2-4683-4a71-a7a9-ced9b7a753f4",
      "title": "",
      "fullFile": "cypress\\e2e\\hipaa-bpp\\manager-admin\\contact.feature",
      "file": "cypress\\e2e\\hipaa-bpp\\manager-admin\\contact.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5a93fba9-98ae-46f1-9861-3095015a55ca",
          "title": "Contact Us - Manager Admin",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Contact Us : Default items should visible",
              "fullTitle": "Contact Us - Manager Admin Contact Us : Default items should visible",
              "timedOut": null,
              "duration": 20382,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "ea649ac2-51fb-4cb0-b700-c247b04a3a7b",
              "parentUUID": "5a93fba9-98ae-46f1-9861-3095015a55ca",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Contact Us : Check texts/labels if visible",
              "fullTitle": "Contact Us - Manager Admin Contact Us : Check texts/labels if visible",
              "timedOut": null,
              "duration": 147,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "5d75ef8a-3009-43a7-a80c-c4b8c5986f74",
              "parentUUID": "5a93fba9-98ae-46f1-9861-3095015a55ca",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Contact Us : Validate cancel submission",
              "fullTitle": "Contact Us - Manager Admin Contact Us : Validate cancel submission",
              "timedOut": null,
              "duration": 1728,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "4d1e9d4a-c2c5-47b8-9d4e-ef7fbe837d73",
              "parentUUID": "5a93fba9-98ae-46f1-9861-3095015a55ca",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Contact Us (EDGE) : Validate contact-us submission",
              "fullTitle": "Contact Us - Manager Admin Contact Us (EDGE) : Validate contact-us submission",
              "timedOut": null,
              "duration": 5264,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "1434ea9a-ccdd-4a1c-bdbd-a07863ef6294",
              "parentUUID": "5a93fba9-98ae-46f1-9861-3095015a55ca",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ea649ac2-51fb-4cb0-b700-c247b04a3a7b",
            "5d75ef8a-3009-43a7-a80c-c4b8c5986f74",
            "4d1e9d4a-c2c5-47b8-9d4e-ef7fbe837d73",
            "1434ea9a-ccdd-4a1c-bdbd-a07863ef6294"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 27521,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}